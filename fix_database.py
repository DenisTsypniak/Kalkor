#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö - –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–æ–ª–æ–Ω–∫–∏ created_timestamp
"""
import asyncio
import aiosqlite
from datetime import datetime

async def fix_database():
    print('üîß –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö...')
    
    try:
        async with aiosqlite.connect('tracker.db') as conn:
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ñ properties
            cursor = await conn.execute('PRAGMA table_info(properties)')
            columns = [row[1] for row in await cursor.fetchall()]
            
            print(f'üìã –ü–æ—Ç–æ—á–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—ñ properties: {columns}')
            
            if 'created_timestamp' not in columns:
                print('üìù –î–æ–¥–∞—î–º–æ –∫–æ–ª–æ–Ω–∫—É created_timestamp...')
                await conn.execute('ALTER TABLE properties ADD COLUMN created_timestamp TEXT')
                
                # –ó–∞–ø–æ–≤–Ω—é—î–º–æ —ñ—Å–Ω—É—é—á—ñ –∑–∞–ø–∏—Å–∏ –ø–æ—Ç–æ—á–Ω–æ—é –¥–∞—Ç–æ—é
                await conn.execute('UPDATE properties SET created_timestamp = ? WHERE created_timestamp IS NULL', 
                                 (datetime.now().isoformat(),))
                await conn.commit()
                print('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ created_timestamp –¥–æ–¥–∞–Ω–∞ —Ç–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–∞!')
            else:
                print('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ created_timestamp –≤–∂–µ —ñ—Å–Ω—É—î!')
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            cursor = await conn.execute('PRAGMA table_info(properties)')
            columns_after = [row[1] for row in await cursor.fetchall()]
            print(f'üìã –ö–æ–ª–æ–Ω–∫–∏ –ø—ñ—Å–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó: {columns_after}')
            
    except Exception as e:
        print(f'‚ùå –ü–æ–º–∏–ª–∫–∞: {e}')
        return False
    
    print('üéØ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∞!')
    return True

if __name__ == "__main__":
    asyncio.run(fix_database())
